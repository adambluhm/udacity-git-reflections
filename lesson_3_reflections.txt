LESSON 3 - REFLECTIONS

When would you want to use a remote repository rather than keeping all your work
local?
    
    It would be useful to create a remote repository when collaborating with
    others as they would need access to the same code. It would also be useful
    for when you are working on multiple computers and need to have easy access
    to your work.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Being in control of when the changes are synced allows you to ensure that
    any changes are synced in a logical way. Similar to if Git automatically
    committed your changes, many times your work would be in a transitional
    state and any code would likely not work correctly if you are in the middle
    of fixing a bug or adding a new feature. It would be far more logical if you
    had full manual control of when and how frequently the syncing took place.

Describe the differences between forks, clones, and branches. When would you use
one instead of another?

    Forked repositories are copies of another repository on GitHub. These are
    useful when someone else has made a project available publicly but you are
    not a collaborator and wish to made your own modifications.

    Cloned repositories are also copies of another repository but these exist on
    the same local machine or a local copy of a GitHub repository. These are
    useful when you want to work on your own repository without modifying the
    original repository.

    Branches are different versions within the same repository. These are useful
    when you would like to save a project in a specific state, like keeping
    track of the all of the different public releases of a project, or if you
    want to work on a bug fix or add a feature without impacting the master
    branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The benefit would be having a snapshot of the remote repository available to
    you, with or without internet access. You can also do a quick check with a
    diff without having to communicate with the GitHub servers. This would be
    quicker and also not require multiple data requests which could be a concern
    for large repositories.

How would you collaborate without using Git or GitHub? What would be easier, and
what would be harder?

    Without Git and GitHub, I would have to send files to other collaborators
    using email, Dropbox, FTP, or something similar. It could be easier to not
    use Git and GitHub on small/simple projects or projects where version
    history is not necessary or needed. Another advantage is that it is very
    easy for everyone to use especially if they are unfamiliar with Git/GitHub.
    Not having Git and GitHub to track changes and different branches would make
    large and more complicated projects much more difficult to collaborate on
    and potentially make changes and collaboration much more time-consuming.

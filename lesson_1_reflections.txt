LESSON 1 - REFLECTIONS

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Diff only displayed the lines that had changed which made it easier to scan
    and look for bugs rather than having to scan each and every line in the
    file. It was a lot quicker to use the diff to pick out the different lines
    and then focus on identifying the changes on only those lines.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    This would allow you to more easily experiment with different solutions or
    pieces of code and if you determine that the new code is not working and/or
    a bug has been introduced, you can refer to the old version to attempt to
    identify why the new code is not working.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros of manually choosing when to commit allows you to choose more
    logical commit points that may not be possible with automatic commits. The
    cons of manual commits is that they are easily forgotten or made too large
    or too small.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Saving multiple files in one commit would be necessary when a modification
    requires edits to multiple files and all the files are related/dependent. In
    other cases, like Google Docs, it is more logical to treat each file
    separately as they are not, or not as heavily, related/dependent on each
    other.

How can you use the commands git log and git diff to view the history of files?

    The command "git log" displays a history of all the commits with the name of
    the individual that made the commit, the time of the commit, and some notes
    describing the purpose of the commit. The command "git diff" can be used to
    compare two files and see which lines were added, modified, or deleted.

How might using version control make you more confident to make changes that
could break something?

    You can safely make changes knowing that you can always revert to a previous
    version if something breaks.

Now that you have your workspace set up, what do you want to try using Git for?

    Git would be useful for my Android projects.
